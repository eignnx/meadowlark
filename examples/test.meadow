
def BLAH: u16 = 123;

struct ConsCell {
    car: u16,
    cdr: *ConsCell,
}

subr list.len(list: ConsCell { car => $a0, cdr => $a1 })
    preserve ($ra)
{
    if list.cdr {
        !addi $rv, $rv, 1;
        !lw cdr, [cdr+2];
        !j @list.len;
    } else {
        !li $rv, 1;
    }
    restore;
    !jr $ra;
}

subr main(argc, argv) preserve ($ra, $s0, $s2) {
    
    !addi $sp, $sp, -4;

    def list = ConsCell {
        $t0 => car,
        [$s0 + 4] => cdr,
    };

    !li list.car, 321;
    !sw list.cdr, $a1;

    !qwer $k1, 0xDEAD, 0xbeef;
    !bf $k1, @.loop;
    !asdf -123, [$rv], +435;
    !lw $k1, [$sp + 32];
    !lw $k1, [$sp - 32];

    !halt;

    !li $a0, 123;
    !jal $ra, @use_saved_regs;

    if $t0 (
        !tge $t0, $t1
    ) do {
        !add $k0, $k0, $k0;
        !addi $s0, $s0, 1;
    }

    !li $a0, 14;
    !jal $ra, @fib;

    while $t1 (
        !li $t2, 100;
        !tlt $t1, $s0, $t2;
    ) do {
        !add $k0, $k0, $k0;
        !addi $s2, $s0, 1;
    }

    if $t0 (
        !tge $t0, $t1
    ) do {
        !add $k0, $k0, $k0;
        !addi $s0, $s0, 1;
    } else {
        !add $k0, $k0, $k0;
        !addi $s0, $s0, 1;
    }

    restore;
    !jr $ra;
}

subr use_saved_regs(x) preserve ($s0, $s1) {
    !addi $s0, $a0, 123;
    !addi $s1, $s0, 456;
    restore;
    !jr $ra;
}

subr add1(a) {
    !addi $rv, $a0, 1;
    !jr $ra;
}
