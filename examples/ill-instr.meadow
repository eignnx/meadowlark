subr _start() {
    !jal $ra, @boot;
    !j @main;
}

def slot__ILL_INSTR: u16 = 0xFFFE;

subr boot() {
    alias vec_slot => $t0;
    alias fn_ptr => $t1;

    # Setup ILL_INSTR handler:
    !li vec_slot, slot__ILL_INSTR; # Slot in interrupt vector
    !li fn_ptr, @handle__ILL_INSTR; # Function pointer of handler
    !sw [vec_slot], fn_ptr;
    !jr $ra;
}

def PUTS: u16 = 3;

subr main() {
    !li $a0, "Within main";
    !li $a1, 0o17; # deecimal 15
    !exn PUTS;

    !exn 0; # Illegal instruction!

    !halt;
}

subr handle__ILL_INSTR() preserve ($a0, $a1) {
    !li $a0, "Within handler";
    !li $a1, 18;
    !exn PUTS;
    restore;
    !kret;
}
